=== Simple array task web interface ===

==== INSTALL ====

1) Set up an apache install somewhere and put these files either in the root or a subdirectory
2) Make the cgi directory a ScriptAlias so the CGI stuff can be executed.  Here's an example httpd/conf.d/grid.conf

ScriptAlias /grid/cgi/ /wherever_it_is/cgi/
Alias /grid/ /wherever_it_is/

3) Reload/restart httpd/apache
4) In js/main.js - put a username in the testParam line.  At the moment, the page only allows you to view jobs for this user (I did warn you it was very very basic for now)
5) In cgi/workers/qstat - put the path of your SGE settings.sh so that the environment can be sourced

It should be working now if you point your browser at <webserver>/grid/ (assuming you used the example conf above)

Try it with an example submission like this:

====== test.sh ======
#!/bin/sh

#$ -S /bin/bash
#$ -N sleep_test

sleep ${SGE_TASK_ID}
echo "Slept"
=====================

qsub -t 1-100 test.sh

==== TODO ====

Multi-user support with a simple text input at the top for username
Caching qstat output
Render the tables server-side??
Fill in all the empty fields
Integrate with a consistent backend (see Notes below)

==== NOTES ====

The UI currently only displays one user
It assumes everything is an array task
As SGE doesn't keep completed task info in qstat, the web UI disappears jobs as soon as they're done.  Completed tasks in ongoing jobs are still shown but there's no way of telling whether they successfully completed.  This needs to be addressed through the addition of some other tracking mechanism - probably a MySQL backend populated from submission wrappers and pre/post scripts.
