#!/bin/sh

# Prolog script that updates the task start times and therefore
# (by trigger) the job start times

PGHOST=queue1 #Put your database server here
PGUSER=sge #Put your database user here (sge probably)
PGDB=sgedb #Put your database name here (sgedb probably)

SGE_ID=${JOB_ID}
if [ "${SGE_TASK_ID}" = "undefined" ]; then
	TASK_NO=1
else
	TASK_NO=${SGE_TASK_ID}
fi

# Now compose the psql command to update the endtime of the task
# check for a returncode and add it to the task, increment attempts,
# increment the donetasks in jobs, and then set status to completed
# if the donetasks = (lasttask - firsttask + 1)
STATUS=3
PSQL_CMD="UPDATE tasks SET endtime = current_timestamp, attempts = attempts + 1"
if [ -e /tmp/${JOB_ID}-${SGE_TASK_ID}-return ]; then
	RETURNCODE=`cat /tmp/${JOB_ID}-${SGE_TASK_ID}-return`
	rm -f /tmp/${JOB_ID}-${SGE_TASK_ID}-return
	# Now fill in the status for the job (not the task)
	if [ "${RETURNCODE}" != "0" ]; then
		STATUS=2
	fi
	PSQL_CMD="${PSQL_CMD}, returncode = ${RETURNCODE}"
fi
# Figure out if it's batch or not and make the appropriate chunk of psql code
if [ ${SGE_TASK_STEPSIZE} -gt 1 ]; then
	PSQL_CMD="${PSQL_CMD} WHERE sgeid = ${SGE_ID} AND taskno >= ${TASK_NO}"
	PSQL_CMD="${PSQL_CMD} AND taskno < (${TASK_NO} + ${SGE_TASK_STEPSIZE});"
	PSQL_CMD="${PSQL_CMD}UPDATE jobs SET"
	# Check we don't set donetasks to a number greater than the total number
	# of tasks
	let TEMP_LAST=${TASK_NO}+${SGE_TASK_STEPSIZE}-1
	if [ ${TEMP_LAST} -gt ${SGE_TASK_LAST} ]; then
		let TOTAL_TASKS=${SGE_TASK_LAST}-${SGE_TASK_FIRST}+1
		PSQL_CMD="${PSQL_CMD} donetasks = ${TOTAL_TASKS} "
	else
		PSQL_CMD="${PSQL_CMD} donetasks ="
		PSQL_CMD="${PSQL_CMD} donetasks + ${SGE_TASK_STEPSIZE} "
	fi
else
	PSQL_CMD="${PSQL_CMD} WHERE sgeid = ${SGE_ID} AND taskno = ${TASK_NO};"
	PSQL_CMD="${PSQL_CMD}UPDATE jobs SET donetasks = donetasks + 1 "
fi
PSQL_CMD="${PSQL_CMD}WHERE sgeid = ${SGE_ID};"
PSQL_CMD="${PSQL_CMD}UPDATE jobs SET endtime = current_timestamp "
PSQL_CMD="${PSQL_CMD}WHERE donetasks = (lasttask - firsttask + 1) "
PSQL_CMD="${PSQL_CMD}AND sgeid = ${SGE_ID};"
PSQL_CMD="${PSQL_CMD}UPDATE jobs SET status = ${STATUS} WHERE status != 2 "
PSQL_CMD="${PSQL_CMD}AND sgeid = ${SGE_ID} AND endtime IS NOT NULL;"

# Run the task command
psql -d ${PGDB} -U ${PGUSER} -h ${PGHOST} -c "${PSQL_CMD}" > /dev/null 2>&1

# Now remove empty logs
[ -r "$SGE_STDOUT_PATH" -a -f "$SGE_STDOUT_PATH" ] && \
[ ! -s "$SGE_STDOUT_PATH" ] && rm -f $SGE_STDOUT_PATH
[ -r "$SGE_STDERR_PATH" -a -f "$SGE_STDERR_PATH" ] && \
[ ! -s "$SGE_STDERR_PATH" ] && rm -f $SGE_STDERR_PATH
